trigger:
  branches:
    include:
    - main
    - development
    - releases/*
  paths:
    exclude:
    - '**/*.md'
    - docs/*
pr:
  branches:
    include:
    - main
    - development
    - releases/*
  paths:
    exclude:
    - '**/*.md'
    - docs/*

variables:
    Agent.Source.Git.ShallowFetchDepth: 0
    Agent.Source.Git.SubmoduleCheckout: recursive
    buildConfiguration: Release
    buildPlatform: Any CPU
    GitVersion.NugetVersion: ''
    vmImage: 'ubuntu-latest'

pool:
  vmImage: '$(vmImage)'

steps:
- task: gitversion/setup@0
  displayName: 'Setup GitVersion'
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: 'Execute GitVersion'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '-c $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: '**/*.[Tt]ests/*.csproj'
    arguments: '-c $(buildConfiguration) --no-restore --collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: "Nuget pack"
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    nobuild: true
    includesymbols: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersion'

- task: NuGetCommand@2
  displayName: "Nuget push"
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'c4c0ef64-cfbb-4977-a8ab-3e08da7f3f3b'
    allowPackageConflicts: true